buildscript {
    ext {
        kotlinVersion = '1.2.41'
        springBootVersion = '1.5.14.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    }
}
allprojects {


    apply plugin: 'kotlin'
    apply plugin: 'kotlin-spring'
    apply plugin: 'idea'
    apply plugin: 'org.springframework.boot'

    group = 'com.nemo.sj'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = 1.8
    compileKotlin {
        kotlinOptions {
            freeCompilerArgs = ["-Xjsr305=strict"]
            jvmTarget = "1.8"
        }
    }
    compileTestKotlin {
        kotlinOptions {
            freeCompilerArgs = ["-Xjsr305=strict"]
            jvmTarget = "1.8"
        }
    }

    repositories {
        mavenCentral()
    }


    ext {
        springCloudVersion = 'Edgware.SR4'
        gSonVersion = "2.8.2"
    }

    dependencies {
        compile("org.springframework.cloud:spring-cloud-starter-oauth2")
        compile project(":sj-core")
        compileOnly('org.projectlombok:lombok')
        compile("org.springframework.boot:spring-boot-starter-data-redis")
        compile('org.springframework.cloud:spring-cloud-starter-zuul')
        compile("org.springframework.cloud:spring-cloud-starter-eureka")
        compile('org.springframework.cloud:spring-cloud-starter-feign')
        compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}")
        compile("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
        testCompile('org.springframework.boot:spring-boot-starter-test')
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }
}