buildscript {
    ext {
        kotlinVersion = '1.2.41'
        springBootVersion = '1.5.12.RELEASE'
//        springBootVersion = '2.0.3.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    }
}

allprojects {
    apply plugin: 'kotlin'
    apply plugin: 'kotlin-spring'
    apply plugin: 'idea'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    group = 'com.nemo'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = 1.8
    compileKotlin {
        kotlinOptions {
            freeCompilerArgs = ["-Xjsr305=strict"]
            jvmTarget = "1.8"
        }
    }
    compileTestKotlin {
        kotlinOptions {
            freeCompilerArgs = ["-Xjsr305=strict"]
            jvmTarget = "1.8"
        }
    }

    ext {
        springCloudTaskVersion = '1.2.2.RELEASE'
        springCloudVersion = 'Edgware.SR3'
//        springCloudVersion = 'Finchley.RELEASE'
        dubboVersion = '0.2.0'
        mybatisPlusVersion = '2.3'
        //gson版本号
        gSonVersion = "2.8.2"
        elasticsearchVersion = '6.2.4'
        elasticsearchRestHighLevelClientVersion = "6.2.4"
    }

    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        mavenCentral()
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
        maven { url "https://repo.spring.io/milestone" }
        maven { url "http://maven.apache.org" }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "http://365yunbao.cn:8081/nexus/content/repositories/thirdparty/" }
    }

    dependencies {
        compile('org.springframework.cloud:spring-cloud-starter-security')
        compile('org.springframework.cloud:spring-cloud-starter-eureka-server')
        compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}")
        compile("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
        testCompile('org.springframework.boot:spring-boot-starter-test')


    }
    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
//            mavenBom "org.springframework.cloud:spring-cloud-task-dependencies:${springCloudTaskVersion}"
        }
    }
}